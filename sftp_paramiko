import paramiko
import zipfile
import os
import sys
from datetime import datetime

####| CREDENCIAIS DE ACESSO |####
HOST  = 'fonecedor.com.br'
SENHA = '123456'
USER  = 'usuariosft'
PORTA = '3322'
####

####| PASTAS E ARQUIVO: ORIGEM e DESTINO |####
dataHoje = datetime.today().strftime('%Y-%m-%d')
pastaDestino = ""
pastaFtp = "./pastanoservidosft/"
arq1 = "nome-arquivo1-" + dataHoje
arq2 = "nome-arquivo2-" + dataHoje
arqs = [arq1,arq2]
####

####
def ConectaSFT(HOST, PORTA, USER, SENHA):
    try:
        client = paramiko.SSHClient()
        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        client.connect(hostname=HOST,port=PORTA,username=USER,password=SENHA,allow_agent=False,look_for_keys=False)
        sftp = client.open_sftp()
        print('Conexão realizada com sucesso!\nBuscando arquivos:\n - ',arq1+".zip",' e ', arq2+".zip")
    except:
        print('\nOps ... deu ruim! ¬¬*\nErro na conexão: verifique as credenciais de acesso.')
        sys.exit()
    ####

    ####| DOWNLOADS DOS .ZIPs |####
    try:   
        for i in arqs:
            sftp.get(pastaFtp+i+".zip",pastaDestino+i+".zip")
            print('Arquivo',i+".zip",' baixado com sucesso!') 
        sftp.close()
    except:
        print('Ops ... deu ruim!')
        print("\nArquivo: ",pastaDestino,arq1+".zip ou ",pastaDestino,arq2+".zip não encontrado(s)! ¬¬*")
        sys.exit()
####

####
def DescompatarArquivo(destino, arquivo):
    try:
        with open(destino+arquivo, 'r') as f:
            print('\nUnzipando ',destino+arquivo,' ... ')
            with zipfile.ZipFile(destino+arquivo, 'r') as unzipArq1:
                unzipArq1.extractall(destino)
                print(destino+arquivo,' unzipado com sucesso!')
    except FileNotFoundError as e:
        print('Arquivo',destino+arquivo,'Inexistente!')
    except IOError as e:
        print('Arquivo',destino+arquivo,'Inexistente!')

####
def ExcluirArquivo(arquivo):
    try:
        print('\nExcluindo ',arquivo,' ... ')
        os.remove(arquivo)
        print(arquivo,' excluído com sucesso!')
    except FileNotFoundError as e:
        print('Arquivo',arquivo,'Inexistente!')
    except IOError as e:
        print('Arquivo',arquivo,'Inexistente!')
 
#### 
def SubstituirCaracter(de, para, arquivo):
    try:
        with open(arquivo, "rt") as fin:
            with open(arquivo+'2', "wt") as fout:
                print('Substituindo "|" por ";" em ',arquivo)
                for line in fin:
                    fout.write(line.replace('|', ';'))
    except:
        print('Arquivo',pastaDestino+i,'.txt não modificado!')


####| CONECTAR AO SFTP E BAIXAR OS ARQUIVOS |####
ConectaSFT(HOST, PORTA, USER, SENHA)

for i in arqs:
    ####| DESCOMPACTA OS ARQUIVOS |####
    DescompatarArquivo(pastaDestino,i+'.zip')  
    
    ####| SUBSTITUINDO '|' POR ';' |####
    SubstituirCaracter("|",";",pastaDestino+i+".txt")
    ExcluirArquivo(pastaDestino+i+".txt")
    os.rename(pastaDestino+i+".txt2", pastaDestino+i+".txt")
    
    ####| EXCLUI ARQUIVO .ZIP |####  
    ExcluirArquivo(pastaDestino+i+".zip")
    
